@()
package net.scalax.simple
package adt
package impl

import temp._

@TypeParameter22(i: Int) = {
    @for(i <- 1 to i) { @if(i > 1) { , } I@{i} }
}

@ADT22Parameter(min: Int, max: Int) = {
    @if(min < max) { RuntimeData[I@{min}, @ADT22Parameter(min + 1, max)] } else { RuntimeZero }
}

trait TypeAdtAliasModel {
    @for(i <- 1 to 22) {
        type CoProduct@{i}[@TypeParameter22(i)] = ADTData[@ADT22Parameter(1, i + 1), ADTPassedFunction.type]
        type CoProductX@{i}[ADTExtension, @TypeParameter22(i)] = ADTData[@ADT22Parameter(1, i + 1), ADTExtension]
    }
}