@()
package net.scalax.simple.codec

@for(i <- 0 to 21) {

trait MMFunctionInput@{i}[M[@for(i1 <- 0 to i - 1) { _, } _], F[_[_]]] {
    def input[@for(i1 <- 0 to i - 1) { M@{i1}[_], } M@{i}[_]](monad: Monad@{i}Apply[M])(func: MFunction@{i}[M, @for(i1 <- 0 to i - 1) { M@{i1}, } M@{i}]): M[@for(i1 <- 0 to i - 1) { F[M@{i1}], } F[M@{i}]]
}

}
